{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactProjects\\\\my-app\\\\src\\\\components\\\\TodoItemsRemaining.jsx\",\n  _s = $RefreshSig$();\n// import PropTypes from \"prop-types\";\nimport React, { useContext, useMemo } from \"react\";\nimport { TodosContext } from \"../context/TodosContext\";\n\n// TodoItemsRemaining.propTypes = {\n\n//   // remaining: PropTypes.number.isRequired, //This one is cahnged to number for the new hook useMemo\n//   remaining: PropTypes.func.isRequired,\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoItemsRemaining() {\n  _s();\n  const {\n    todos\n  } = useContext(TodosContext);\n  function remainingCalculation() {\n    // console.log('calculating remaining todos. This is slow.');\n    // for (let index = 0; index < 2000000000; index++) {}\n    return todos.filter(todo => !todo.isComplete).length;\n  }\n  const remaining = useMemo(remainingCalculation, [todos]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [remaining, \" items remaining\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n  // return <span>{props.remaining} items remaining</span>; This one is cahnged to Not take param for the new hook useMemo\n}\n_s(TodoItemsRemaining, \"mhtD2RCjQN2E96sVAk4Xn9zTHt0=\");\n_c = TodoItemsRemaining;\nexport default TodoItemsRemaining;\nvar _c;\n$RefreshReg$(_c, \"TodoItemsRemaining\");","map":{"version":3,"names":["React","useContext","useMemo","TodosContext","jsxDEV","_jsxDEV","TodoItemsRemaining","_s","todos","remainingCalculation","filter","todo","isComplete","length","remaining","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ReactProjects/my-app/src/components/TodoItemsRemaining.jsx"],"sourcesContent":["// import PropTypes from \"prop-types\";\r\nimport React, { useContext, useMemo } from \"react\";\r\nimport { TodosContext } from \"../context/TodosContext\";\r\n\r\n// TodoItemsRemaining.propTypes = {\r\n\r\n//   // remaining: PropTypes.number.isRequired, //This one is cahnged to number for the new hook useMemo\r\n//   remaining: PropTypes.func.isRequired,\r\n// };\r\n\r\nfunction TodoItemsRemaining() {\r\n  const { todos } = useContext(TodosContext);\r\n  function remainingCalculation() {\r\n    // console.log('calculating remaining todos. This is slow.');\r\n    // for (let index = 0; index < 2000000000; index++) {}\r\n    return todos.filter(todo => !todo.isComplete).length;\r\n  }\r\n\r\n  const remaining = useMemo(remainingCalculation, [todos]);\r\n\r\n  return <span>{remaining} items remaining</span>;\r\n  // return <span>{props.remaining} items remaining</span>; This one is cahnged to Not take param for the new hook useMemo\r\n}\r\n\r\nexport default TodoItemsRemaining;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,yBAAyB;;AAEtD;;AAEA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGP,UAAU,CAACE,YAAY,CAAC;EAC1C,SAASM,oBAAoBA,CAAA,EAAG;IAC9B;IACA;IACA,OAAOD,KAAK,CAACE,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,UAAU,CAAC,CAACC,MAAM;EACtD;EAEA,MAAMC,SAAS,GAAGZ,OAAO,CAACO,oBAAoB,EAAE,CAACD,KAAK,CAAC,CAAC;EAExD,oBAAOH,OAAA;IAAAU,QAAA,GAAOD,SAAS,EAAC,kBAAgB;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;EAC/C;AACF;AAACZ,EAAA,CAZQD,kBAAkB;AAAAc,EAAA,GAAlBd,kBAAkB;AAc3B,eAAeA,kBAAkB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}