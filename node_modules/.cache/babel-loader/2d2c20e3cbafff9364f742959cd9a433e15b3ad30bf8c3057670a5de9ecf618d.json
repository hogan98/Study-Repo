{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactProjects\\\\my-app\\\\src\\\\components\\\\TodoList.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport TodoClearCompleted from \"./TodoClearCompleted\";\nimport TodoCompleteAllTodos from \"./TodoCompleteAllTodos\";\nimport TodoItemsRemaining from \"./TodoItemsRemaining\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nTodoList.propTypes = {\n  todos: PropTypes.array.isRequired,\n  todosFiltered: PropTypes.func.isRequired,\n  completeTodo: PropTypes.func.isRequired,\n  markAsEditing: PropTypes.func.isRequired,\n  updateTodo: PropTypes.func.isRequired,\n  cancelEdit: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  remaining: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  completeAllTodos: PropTypes.func.isRequired\n};\nfunction TodoList(props) {\n  _s();\n  const [filter, setFilter] = useState(\"all\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: props.todosFiltered(filter).map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"todo-item-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => props.completeTodo(todo.id),\n            checked: todo.isComplete ? true : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), !todo.isEditing ? /*#__PURE__*/_jsxDEV(\"span\", {\n            onDoubleClick: () => props.markAsEditing(todo.id),\n            className: `todo-item-label ${todo.isComplete ? \"line-through\" : \"\"}`,\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onBlur: event => props.updateTodo(event, todo.id),\n            onKeyDown: event => {\n              if (event.key === \"Enter\") {\n                props.updateTodo(event, todo.id);\n              } else if (event.key === \"Escape\") {\n                props.cancelEdit(event, todo.id);\n              }\n            },\n            className: \"todo-item-input\",\n            defaultValue: todo.title,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => props.deleteTodo(todo.id),\n          className: \"x-button\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"x-button-icon\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"check-all-container\",\n      children: [/*#__PURE__*/_jsxDEV(TodoCompleteAllTodos, {\n        completeAllTodos: props.completeAllTodos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoItemsRemaining, {\n        remaining: props.remaining\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"other-buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(TodoFilters, {\n        todosFiltered: props.todosFiltered,\n        filter: filter,\n        setFilter: setFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TodoClearCompleted, {\n          clearCompleted: props.clearCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TodoList, \"boPJerHaELAyf+PNkR+Y8+JetQg=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["PropTypes","React","useState","TodoClearCompleted","TodoCompleteAllTodos","TodoItemsRemaining","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoList","propTypes","todos","array","isRequired","todosFiltered","func","completeTodo","markAsEditing","updateTodo","cancelEdit","deleteTodo","remaining","clearCompleted","completeAllTodos","props","_s","filter","setFilter","children","className","map","todo","index","type","onChange","id","checked","isComplete","fileName","_jsxFileName","lineNumber","columnNumber","isEditing","onDoubleClick","title","onBlur","event","onKeyDown","key","defaultValue","autoFocus","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","TodoFilters","_c","$RefreshReg$"],"sources":["C:/ReactProjects/my-app/src/components/TodoList.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport TodoClearCompleted from \"./TodoClearCompleted\";\r\nimport TodoCompleteAllTodos from \"./TodoCompleteAllTodos\";\r\nimport TodoItemsRemaining from \"./TodoItemsRemaining\";\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  todosFiltered: PropTypes.func.isRequired,\r\n  completeTodo: PropTypes.func.isRequired,\r\n  markAsEditing: PropTypes.func.isRequired,\r\n  updateTodo: PropTypes.func.isRequired,\r\n  cancelEdit: PropTypes.func.isRequired,\r\n  deleteTodo: PropTypes.func.isRequired,\r\n  remaining: PropTypes.func.isRequired,\r\n  clearCompleted: PropTypes.func.isRequired,\r\n  completeAllTodos: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction TodoList(props) {\r\n  const [filter, setFilter] = useState(\"all\");\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"todo-list\">\r\n        {props.todosFiltered(filter).map((todo, index) => (\r\n          <li key={todo.id} className=\"todo-item-container\">\r\n            <div className=\"todo-item\">\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => props.completeTodo(todo.id)}\r\n                checked={todo.isComplete ? true : false}\r\n              />\r\n\r\n              {!todo.isEditing ? (\r\n                <span\r\n                  onDoubleClick={() => props.markAsEditing(todo.id)}\r\n                  className={`todo-item-label ${\r\n                    todo.isComplete ? \"line-through\" : \"\"\r\n                  }`}\r\n                >\r\n                  {todo.title}\r\n                </span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  onBlur={event => props.updateTodo(event, todo.id)}\r\n                  onKeyDown={event => {\r\n                    if (event.key === \"Enter\") {\r\n                      props.updateTodo(event, todo.id);\r\n                    } else if (event.key === \"Escape\") {\r\n                      props.cancelEdit(event, todo.id);\r\n                    }\r\n                  }}\r\n                  className=\"todo-item-input\"\r\n                  defaultValue={todo.title}\r\n                  autoFocus\r\n                />\r\n              )}\r\n            </div>\r\n            <button\r\n              onClick={() => props.deleteTodo(todo.id)}\r\n              className=\"x-button\"\r\n            >\r\n              <svg\r\n                className=\"x-button-icon\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M6 18L18 6M6 6l12 12\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <div className=\"check-all-container\">\r\n        <TodoCompleteAllTodos completeAllTodos={props.completeAllTodos} />\r\n\r\n        <TodoItemsRemaining remaining={props.remaining} />\r\n      </div>\r\n\r\n      <div className=\"other-buttons-container\">\r\n        <TodoFilters\r\n          todosFiltered={props.todosFiltered}\r\n          filter={filter}\r\n          setFilter={setFilter}\r\n        />\r\n        <div>\r\n          <TodoClearCompleted clearCompleted={props.clearCompleted} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}