{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactProjects\\\\my-app\\\\src\\\\components\\\\TodoList.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport TodoClearCompleted from \"./TodoClearCompleted\";\nimport TodoCompleteAllTodos from \"./TodoCompleteAllTodos\";\nimport TodoFilters from \"./TodoFilters\";\nimport TodoItemsRemaining from \"./TodoItemsRemaining\";\nimport useToggle from \"./hooks/useToggle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nTodoList.propTypes = {\n  todos: PropTypes.array.isRequired,\n  todosFiltered: PropTypes.func.isRequired,\n  completeTodo: PropTypes.func.isRequired,\n  markAsEditing: PropTypes.func.isRequired,\n  updateTodo: PropTypes.func.isRequired,\n  cancelEdit: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  // remaining: PropTypes.number.isRequired, //For useMemo\n  remaining: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  completeAllTodos: PropTypes.func.isRequired\n};\nfunction TodoList(props) {\n  _s();\n  const [isFeaturesOneVisible, setFeaturesOneVisible] = useToggle(); //for Visibility hook whebn clicking features on toggle(Custom hook)\n  const [filter, setFilter] = useState(\"all\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: props.todosFiltered(filter).map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"todo-item-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => props.completeTodo(todo.id),\n              checked: todo.isComplete ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), !todo.isEditing ?\n            /*#__PURE__*/\n            //Conditional Rendering (This is turnery instead of ifelse)\n            _jsxDEV(\"span\", {\n              onDoubleClick: () => props.markAsEditing(todo.id),\n              className: `todo-item-label ${todo.isComplete ? \"line-through\" : \"\"}`,\n              children: todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this) :\n            /*#__PURE__*/\n            //these brackets are for if else statement\n            _jsxDEV(\"input\", {\n              //this is for editing it will comment out the one above and use this\n              type: \"text\",\n              onBlur: event => props.updateTodo(event, todo.id) //to close editing when clicking off\n              ,\n              onKeyDown: event => {\n                if (event.key === \"Enter\") {\n                  props.updateTodo(event, todo.id);\n                } else if (event.key === \"Escape\") {\n                  props.cancelEdit(event, todo.id);\n                }\n              },\n              className: \"todo-item-input\",\n              defaultValue: todo.title,\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => props.deleteTodo(todo.id),\n            className: \"x-button\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"x-button-icon\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggles-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setFeaturesOneVisible,\n          className: \"button\",\n          children: \"Features One Toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          children: \"Features Two Toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), isFeaturesOneVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-all-container\",\n        children: [/*#__PURE__*/_jsxDEV(TodoCompleteAllTodos, {\n          completeAllTodos: props.completeAllTodos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TodoItemsRemaining, {\n          remaining: props.remaining\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"other-buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(TodoFilters, {\n          todosFiltered: props.todosFiltered,\n          filter: filter,\n          setFilter: setFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TodoClearCompleted, {\n            clearCompleted: props.clearCompleted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"bnokkaYqcQO8vbkEjGeEGKU714Y=\", false, function () {\n  return [useToggle];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["PropTypes","React","useState","TodoClearCompleted","TodoCompleteAllTodos","TodoFilters","TodoItemsRemaining","useToggle","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoList","propTypes","todos","array","isRequired","todosFiltered","func","completeTodo","markAsEditing","updateTodo","cancelEdit","deleteTodo","remaining","clearCompleted","completeAllTodos","props","_s","isFeaturesOneVisible","setFeaturesOneVisible","filter","setFilter","children","className","map","todo","index","type","onChange","id","checked","isComplete","fileName","_jsxFileName","lineNumber","columnNumber","isEditing","onDoubleClick","title","onBlur","event","onKeyDown","key","defaultValue","autoFocus","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","$RefreshReg$"],"sources":["C:/ReactProjects/my-app/src/components/TodoList.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport TodoClearCompleted from \"./TodoClearCompleted\";\r\nimport TodoCompleteAllTodos from \"./TodoCompleteAllTodos\";\r\nimport TodoFilters from \"./TodoFilters\";\r\nimport TodoItemsRemaining from \"./TodoItemsRemaining\";\r\nimport useToggle from \"./hooks/useToggle\";\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  todosFiltered: PropTypes.func.isRequired,\r\n  completeTodo: PropTypes.func.isRequired,\r\n  markAsEditing: PropTypes.func.isRequired,\r\n  updateTodo: PropTypes.func.isRequired,\r\n  cancelEdit: PropTypes.func.isRequired,\r\n  deleteTodo: PropTypes.func.isRequired,\r\n  // remaining: PropTypes.number.isRequired, //For useMemo\r\n  remaining: PropTypes.func.isRequired,\r\n  clearCompleted: PropTypes.func.isRequired,\r\n  completeAllTodos: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction TodoList(props) {\r\n  const [isFeaturesOneVisible, setFeaturesOneVisible] = useToggle(); //for Visibility hook whebn clicking features on toggle(Custom hook)\r\n  const [filter, setFilter] = useState(\"all\");\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <ul className=\"todo-list\">\r\n          {props.todosFiltered(filter).map((todo, index) => (\r\n            <li key={todo.id} className=\"todo-item-container\">\r\n              <div className=\"todo-item\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={() => props.completeTodo(todo.id)}\r\n                  checked={todo.isComplete ? true : false}\r\n                />\r\n                {!todo.isEditing ? ( //Conditional Rendering (This is turnery instead of ifelse)\r\n                  <span\r\n                    onDoubleClick={() => props.markAsEditing(todo.id)}\r\n                    className={`todo-item-label ${\r\n                      todo.isComplete ? \"line-through\" : \"\"\r\n                    }`}\r\n                  >\r\n                    {todo.title}\r\n                  </span>\r\n                ) : (\r\n                  //these brackets are for if else statement\r\n                  <input //this is for editing it will comment out the one above and use this\r\n                    type=\"text\"\r\n                    onBlur={event => props.updateTodo(event, todo.id)} //to close editing when clicking off\r\n                    onKeyDown={event => {\r\n                      if (event.key === \"Enter\") {\r\n                        props.updateTodo(event, todo.id);\r\n                      } else if (event.key === \"Escape\") {\r\n                        props.cancelEdit(event, todo.id);\r\n                      }\r\n                    }}\r\n                    className=\"todo-item-input\"\r\n                    defaultValue={todo.title}\r\n                    autoFocus\r\n                  />\r\n                )}\r\n              </div>\r\n              <button\r\n                onClick={() => props.deleteTodo(todo.id)}\r\n                className=\"x-button\"\r\n              >\r\n                <svg\r\n                  className=\"x-button-icon\"\r\n                  fill=\"none\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  stroke=\"currentColor\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M6 18L18 6M6 6l12 12\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"toggles-container\">\r\n          <button onClick={setFeaturesOneVisible} className=\"button\">\r\n            Features One Toggle\r\n          </button>\r\n          <button className=\"button\">Features Two Toggle</button>\r\n        </div>\r\n\r\n        {isFeaturesOneVisible && (\r\n          <div className=\"check-all-container\">\r\n            <TodoCompleteAllTodos completeAllTodos={props.completeAllTodos} />\r\n            <TodoItemsRemaining remaining={props.remaining} />\r\n          </div>\r\n        )}\r\n        <div className=\"other-buttons-container\">\r\n          <TodoFilters\r\n            todosFiltered={props.todosFiltered}\r\n            filter={filter}\r\n            setFilter={setFilter}\r\n          />\r\n          <div>\r\n            <TodoClearCompleted clearCompleted={props.clearCompleted} />\r\n          </div>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}